#!/usr/bin/env ruby
# -*- mode: ruby -*-

require 'evesync/service'
require 'evesync/sync'

sync = Evesync::Sync.new

evesync = Evesync::Service.new(:evesyncd) do |config|
  config.proxy = sync
  config.at_start = sync.method(:discover)
  config.interval = 15 # TODO: read from config
end

evesync.start do
  sync.synchronize
end

__END__
require 'evesync/log'
require 'evesync/sync'
require 'evesync/config'
require 'evesync/ipc/server'

# Exiting if `auto_discover = false'
unless Evesync::Config['auto_discover']
  Evesync::Log.info('Synchronizing not required')
  exit(0)
end

Evesync::Log.info('Synchronizing daemon starting...')

sync = Evesync::Sync.new

sync_server = Evesync::IPC::Server.new(
  port: :evesyncd,
  proxy: sync
).start

Signal.trap('TERM') do
  sync_server.stop
  exit(0)
end

Evesync::Log.info('Synchronizing daemon started!')

few_seconds = Evesync::Config['discover_timeout'].to_i

sync.discover                   # discovering nodes
sleep 3                         # giving 3 seconds to complete

begin
  loop do
    sync.synchronize            # updating this node
    sleep few_seconds           # ... in some interval
  end
rescue SignalException
  sync_server.stop
  exit(0)
end
