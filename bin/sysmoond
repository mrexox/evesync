#!/usr/bin/env ruby
# -*- mode: ruby -*-

require 'sysmoon/distro'

# sysmoon = Sysmoon.new(Config.new(CONFIG_FILE))

# begin
#   event_handler = sysmoon.make_handler
# rescue RuntimeError => re
#   # Handle exceptions from watcher while
#   # creating inotify objects
# end

# sysmoon.run do |event|
#   begin
#     event_handler.handle(event)
#   rescue RuntimeError => re
#     # Log error
#     # Handle Error if possible
#     # maybe rescue this file event listener
#   end
# end

puts "sysmoond starting!"

pw_que = Queue.new

pw_thr = Thread.new { PackageWatcher.new(pw_que).run }

puts "sysmoond started!"

Signal.trap("TERM") do
  puts "sysmoond killed..."
  pw_thr.exit
  exit(0)
end

Signal.trap("SIGINT") do
  puts "sysmoond interrupted..."
  pw_thr.exit
  exit(1)
end

loop do
  value = pw_que.pop
  puts "Value #{value}"
end
