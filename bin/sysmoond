#!/usr/bin/env ruby
# -*- mode: ruby -*-

require 'sysmoon/distro'
require 'sysmoon/handler'
require 'sysmoon/log'

Sysmoon::Log.info 'sysmoond starting...'

queue = Queue.new

threads = []

# Creating subtasks
pkg_watcher = Sysmoon::PackageWatcher.new(queue)
local_handler = Sysmoon::Handler::Local.new(queue)

# Starting in separated threads
threads << local_handler.run
threads << pkg_watcher.run

moon_server = Sysmoon::IPC.new(
  protocol: :tcp,
  side: :server,
  port: :moon
)

moon_server.on_recieve do |message, client|

end

Sysmoon::Log.info 'sysmoond started!'

Signal.trap('SIGINT') do
  threads.each(&:exit)
  exit(0)
end

begin
  loop do
    sleep 100
  end
rescue SignalException => e
  Sysmoon::Log.warn("Signal got: #{e.signm}(#{signo})")
  threads.each(&:exit)
  exit(0)
end
